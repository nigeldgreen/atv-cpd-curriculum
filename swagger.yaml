swagger: '2.0'
info:
  description: |
    API to manage Modules, components and assignments for Asset TV CPD
  version: "1.0.0"
  title: ATV CPD Curriculum
  contact:
    email: nigel.green@asset.tv

tags:
  - name: module
    description: Manage core module data
  - name: component
    description: Manage components that make up a module
  - name: assignment
    description: Manage assignment of modules to organisations and departments
  - name: reports
    description: Retrieve data to correctly show reporting in the UI

paths:
  /module:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
    get:
      tags:
        - module
      summary: Retrieve all modules
      produces:
        - application/json
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/ModuleOutput'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Module].
        500:
          description: Server error
  /module/{module_id}:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
      - in: path
        name: module_id
        description: ID to identify the module
        required: true
        type: integer
    get:
      tags:
        - module
      summary: Retrieve a single module
      produces:
        - application/json
      responses:
        200:
          description: ok
          schema:
            type: array
            items:
              $ref: '#/definitions/ModuleOutput'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Module].
        500:
          description: Server error
    put:
      tags:
        - module
      summary: Update module details
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Revised details to update a module
          required: true
          schema:
            $ref: '#/definitions/ModuleInput'
      responses:
        204:
          description: ok
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Module].
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/422UnprocessableEntity'
        500:
          description: Server error
    delete:
      tags:
        - module
      summary: Delete a module
      produces:
        - application/json
      responses:
        204:
          description: No content
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Department].
        500:
          description: Server error



  /component/{component_id}:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
      - in: path
        name: component_id
        description: ID to identify the component
        required: true
        type: integer
    get:
      tags:
        - component
      summary: Retrieve a single component
      produces:
        - application/json
      responses:
        200:
          description: ok
          schema:
            type: object
            items:
              $ref: '#/definitions/ComponentOutput'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Component].
        500:
          description: Server error
    put:
      tags:
        - component
      summary: Update component details
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Revised details to update a component
          required: true
          schema:
            $ref: '#/definitions/ComponentInput'
      responses:
        204:
          description: ok
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Component].
        422:
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/422UnprocessableEntity'
        500:
          description: Server error
    delete:
      tags:
        - component
      summary: Delete a component
      produces:
        - application/json
      responses:
        204:
          description: No content
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No query results for model [App\\Component].
        500:
          description: Server error



  /module/{module_id}/component/{component_id}:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
      - in: path
        name: module_id
        description: ID to identify the module
        required: true
        type: integer
      - in: path
        name: component_id
        description: ID to identify the component
        required: true
        type: integer
    post:
      tags:
        - assignment
      summary: Create a link between a module and a component
      produces:
        - application/json
      responses:
        204:
          description: ok
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Server error
    delete:
      tags:
        - assignment
      summary: Remove a link between a module and a component
      produces:
        - application/json
      responses:
        204:
          description: No content
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: No link between that module and component.
        500:
          description: Server error



  /reports/module/{module_id}:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
      - in: path
        name: module_id
        description: ID to identify the module
        required: true
        type: integer
      - in: query
        name: uuids
        description: list of users to return data for
        required: true
        type: array
    get:
      tags:
        - reports
      summary: Get completion data for a component, for any UUIDs passed in
      produces:
        - application/json
      responses:
        200:
          description: ok
          schema:
            type: object
            $ref: '#/definitions/ModuleCompletionReport'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Server error



  /reports/component/{component_id}:
    parameters:
      - in: header
        name: Authorization
        description: Auth0 JWT to identify the user in the form "Bearer JWT"
        required: true
        type: string
      - in: path
        name: component_id
        description: ID to identify the component
        required: true
        type: integer
      - in: query
        name: uuids
        description: list of users to return data for
        required: true
        type: array
    get:
      tags:
        - reports
      summary: Get completion data for a module, for any UUIDs passed in
      produces:
        - application/json
      responses:
        200:
          description: ok
          schema:
            type: object
            $ref: '#/definitions/ModuleCompletionReport'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        500:
          description: Server error

definitions:
  ModuleInput:
    type: object
    properties:
      name:
        type: string
        example: Becoming a better CFO
      description:
        type: string
        example: Description of the 'Becoming a better CFO' module
      created_by:
        type: string
        example: Nigel Green
      due:
        type: string
        example: "2018-12-25 13:37:42"
      public:
        type: boolean
        example: false
  ModuleOutput:
    type: object
    properties:
      uuid:
        type: string
        example: d5fd640e-28c1-4750-bec7-b331c9dc8cc4
      name:
        type: string
        example: Becoming a better CFO
      description:
        type: string
        example: Description of the 'Becoming a better CFO' module
      created_by:
        type: string
        example: Nigel Green
      due:
        type: string
        example: "2018-12-25 13:37:42"
      components:
        type: array
        items:
          $ref: '#/definitions/ComponentOutput'
  ComponentInput:
    type: object
    properties:
      name:
        type: string
        example: Brexit impact and forecasts
      description:
        type: string
        example: Description of the 'Brexit impact and forecasts' video
      units:
        type: integer
        example: 1800
      module_order:
        type: integer
        example: 1
      required:
        type: boolean
        example: true
  ComponentOutput:
    type: object
    properties:
      uuid:
        type: string
        example: d5fd640e-28c1-4750-bec7-b331c9dc8cc4
      name:
        type: string
        example: Brexit impact and forecasts
      description:
        type: string
        example: Description of the 'Brexit impact and forecasts' video
      units:
        type: integer
        example: 1800
      module_order:
        type: integer
        example: 1
      required:
        type: boolean
        example: true
  ModuleCompletionReport:
    type: object
    properties:
      uuid:
        type: string
        example: d5fd640e-28c1-4750-bec7-b331c9dc8cc4
      name:
        type: string
        example: Brexit impact and forecasts
      user_data:
        type: array
        items:
          type: object
          properties:
            uuid:
              type: string
              example: d5fd640e-28c1-4750-bec7-b331c9dc8cc4
            completed:
              type: integer
              example: 7200

  400CannotUpdateOwner:
    type: string
    example: Cannot change owner details through the portal.
  409ModuleAlreadyAssignedToEntity:
    type: object
    properties:
      message:
        type: string
        example: Module is already linked to department.
  422UnprocessableEntity:
    type: object
    properties:
      message:
        type: string
        example: The given data was invalid.
      errors:
        type: object
        properties:
          error_field_1:
            type: array
            items:
              type: string
              example: Error message for this field.
          error_field_2:
            type: array
            items:
              type: string
              example: Error message for this field.

securityDefinitions:
  jwt:
    type: apiKey
    in: header
    name: Authorization

security:
  - jwt: []
# host: localhost:3002
# basePath: /api/v1
schemes:
  - https
  - http
externalDocs:
  description: Confluence page describing Curriculum
  url: https://think-digital.atlassian.net/wiki/spaces/AP/pages/251199489/Courses
